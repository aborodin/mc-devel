#RETR $FISH_FILENAME $FISH_STARTOFFSET $FISH_CHUNKSIZE
LC_TIME=C
export LC_TIME
fish_get_perl ()
{
FILENAME=$1
STARTOFFSET=$2
CHUNKSIZE=$3
perl -e '
use strict;
use POSIX;
use Fcntl;
my $filename = $ARGV[0];
my $pos = $ARGV[1];
my $chunk = $ARGV[2];
my $content;
my $next_pos;
my ($dev,$ino,$mode,$nlink,$uid,$gid,$rdev,$size,$atime,$mtime,$ctime,$blksize,$blocks) = lstat("$filename");
my $n;
if (open IFILE,$filename) {
    printf("$size\n");
    printf("### 100\n");
    $next_pos = $pos + $chunk;
    if ($next_pos > $size) {
        $chunk = $size - $pos;
    }
    if ($chunk != 0) {
        seek (IFILE, $pos, 0);
        $n = read(IFILE,$content,$chunk);
        if ($n != 0) {
            print $content;
        }
    }
    close IFILE;
    printf("### 200\n");
} else {
    printf("### 500\n");
}
exit 0
' "${FILENAME}" $STARTOFFSET $CHUNKSIZE
}

fish_get_head_tail ()
{
FILENAME=$1
STARTOFFSET=$2
CHUNKSIZE=$3
LC_TIME=C
export LC_TIME
if dd if="${FILENAME}" of=/dev/null bs=1 count=1 2>/dev/null ; then
    file_size=`ls -ln "${FILENAME}" 2>/dev/null | (
       read p l u g s r
       echo $s
    )`
    echo ${file_size}
    echo "### 100"
    next_offset=`expr ${STARTOFFSET} + ${CHUNKSIZE}`
    if [ ${next_offset} -gt ${file_size} ]; then
        CHUNKSIZE=`expr ${file_size} - ${STARTOFFSET}`
        next_offset=${file_size}
    fi
    if [ ${CHUNKSIZE} -eq 0 ]; then
        echo -n
    elif [ ${STARTOFFSET} -eq 0 ]; then
        head -q -c ${CHUNKSIZE} "${FILENAME}"
    else
        head -q -c $next_offset "${FILENAME}" | tail -q -c +${CHUNKSIZE} -
    fi
    echo "### 200"
else
    echo "### 500"
fi
}

fish_get_dd ()
{
FILENAME=$1
STARTOFFSET=$2
CHUNKSIZE=$3
LC_TIME=C
export LC_TIME
if [ -e "${FILENAME}" ]; then
    file_size=`ls -ln "${FILENAME}" 2>/dev/null | (
       read p l u g s r
       echo $s
    )`
    echo ${file_size}
    echo "### 100"
    next_offset=`expr ${STARTOFFSET} + ${CHUNKSIZE}`
    if [ ${next_offset} -gt ${file_size} ]; then
        CHUNKSIZE=`expr ${file_size} - ${STARTOFFSET}`
    fi
    if [ ${CHUNKSIZE} -eq 0 ]; then
        echo -n
    elif [ ${STARTOFFSET} -eq 0 ]; then
        dd if="${FILENAME}" bs=${CHUNKSIZE} count=1 2>/dev/null
    else
        dd if="${FILENAME}" ibs=${STARTOFFSET} skip=1 obs=${CHUNKSIZE} count=1 2>/dev/null
    fi
    echo "### 200"
else
    echo "### 500"
fi
}

if [ -n "${FISH_HAVE_PERL}" ]; then
    fish_get_perl "/${FISH_FILENAME}" ${FISH_STARTOFFSET} ${FISH_CHUNKSIZE}
elif [ -n "${FISH_HAVE_HEAD}" -a -n "${FISH_HAVE_TAIL}" ]; then
    fish_get_head_tail "/${FISH_FILENAME}" ${FISH_STARTOFFSET} ${FISH_CHUNKSIZE}
else
    fish_get_dd "/${FISH_FILENAME}" ${FISH_STARTOFFSET} ${FISH_CHUNKSIZE}
fi
